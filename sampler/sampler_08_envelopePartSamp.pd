#N canvas 264 290 661 273 16;
#X obj 80 4 bng 25 250 50 0 fromLoadSFQZ1 toLoadSFQZ1 empty 17 7 0
10 -260097 -260097 -260097;
#X floatatom 207 4 5 0 20 0 Amp toAmpQZ1 fromAmpQZ1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array buf1LQZ1 571233 float 2;
#X coords 0 1 571233 -1 600 60 1 0 0;
#X restore 9 112 graph;
#X obj 12 112 hsl 595 60 0 1 0 0 empty toGraphicIdxLQZ1 empty -2 -8
0 10 -262144 -1 -1 0 1;
#X obj 143 4 tgl 25 0 fromDSPQZ1 empty empty 17 7 0 10 -257985 -1 -1
0 1;
#X text 110 5 DSP;
#X text 6 5 Load SF;
#N canvas 0 22 450 278 (subpatch) 0;
#X array buf1RQZ1 571233 float 2;
#X coords 0 1 571233 -1 600 60 1 0 0;
#X restore 9 192 graph;
#X obj 12 192 hsl 595 60 0 1 0 0 empty toGraphicIdxRQZ1 empty -2 -8
0 10 -262144 -1 -1 0 1;
#X floatatom 556 4 8 0 0 0 Spd toSpdQZ1 fromSpdQZ1;
#X floatatom 318 4 8 0 0 0 Start toStartPctQZ1 fromStartPctQZ1;
#X floatatom 437 4 8 0 0 0 End toEndPctQZ1 fromEndPctQZ1;
#X obj 12 92 hsl 595 20 0 1 0 0 toStartPctQZ1 empty empty -2 -8 0 10
-262144 -4034 -1 0 1;
#X obj 12 172 hsl 595 20 0 1 0 0 toEndPctQZ1 empty empty -2 -8 0 10
-262144 -4032 -1 0 1;
#N canvas 9 22 1886 1021 subpatch1 0;
#X obj 223 394 soundfiler;
#X obj 223 328 openpanel;
#X obj 282 553 expr 44100 / $f1;
#X obj 443 1180 phasor~;
#X obj 389 1561 *~;
#X obj 590 2326 *~;
#X msg 793 2070 \$1 20;
#X obj 590 2358 dac~, f 7;
#X floatatom 282 585 10 0 0 0 - - -;
#X msg 340 306 \; pd dsp \$1;
#X floatatom 412 1701 10 0 0 0 - - -;
#X msg 622 181 1;
#N canvas 237 152 1024 621 sigasfloat 0;
#X obj 21 54 inlet~ sigin;
#X obj 138 214 snapshot~;
#X obj 161 154 metro 50;
#X obj 214 72 loadbang;
#X text 235 207 samples a signal and outputs a float each time it receives
a bang, f 34;
#X text 254 153 bangs snapshot ever 50ms;
#X text 314 73 metro needs a bang to start outputing bangs;
#X obj 90 313 outlet float out;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 529 1399 pd sigasfloat;
#X obj 215 518 t b f f;
#X obj 375 784 f;
#N canvas 237 152 1024 621 sigasfloat 0;
#X obj 21 54 inlet~ sigin;
#X obj 138 214 snapshot~;
#X obj 161 154 metro 50;
#X obj 214 72 loadbang;
#X text 235 207 samples a signal and outputs a float each time it receives
a bang, f 34;
#X text 254 153 bangs snapshot ever 50ms;
#X text 314 73 metro needs a bang to start outputing bangs;
#X obj 90 313 outlet float out;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 412 1670 pd sigasfloat;
#X text 516 1700 Curr Samp;
#X msg 223 361 read -resize \$1 buf1LQZ1 buf1RQZ1;
#X obj 169 1737 tabread4~ buf1LQZ1;
#X obj 389 1737 tabread4~ buf1RQZ1;
#X obj 657 2326 *~;
#X obj 412 735 t b f;
#X obj 375 841 *;
#X obj 241 -82 loadbang;
#X msg 1175 189 1;
#X obj 934 503 -;
#X floatatom 1061 572 5 0 0 0 - - -;
#X obj 494 1225 *~;
#N canvas 237 152 1024 621 sigasfloat 0;
#X obj 21 54 inlet~ sigin;
#X obj 138 214 snapshot~;
#X obj 161 154 metro 50;
#X obj 214 72 loadbang;
#X text 235 207 samples a signal and outputs a float each time it receives
a bang, f 34;
#X text 254 153 bangs snapshot ever 50ms;
#X text 314 73 metro needs a bang to start outputing bangs;
#X obj 90 313 outlet float out;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 647 1306 pd sigasfloat;
#X floatatom 647 1340 5 0 0 0 - - -;
#X obj 454 1347 +~;
#N canvas 237 152 1024 621 sigasfloat 0;
#X obj 21 54 inlet~ sigin;
#X obj 138 214 snapshot~;
#X obj 161 154 metro 50;
#X obj 214 72 loadbang;
#X text 235 207 samples a signal and outputs a float each time it receives
a bang, f 34;
#X text 254 153 bangs snapshot ever 50ms;
#X text 314 73 metro needs a bang to start outputing bangs;
#X obj 90 313 outlet float out;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 284 1392 pd sigasfloat;
#X floatatom 284 1426 5 0 0 0 - - -;
#X msg 867 186 0;
#X msg 730 183 1;
#X obj 857 466 t b f f;
#X obj 882 573 t b f f;
#X obj 463 798 / 1;
#X obj 400 703 f;
#X obj 763 387 expr min($f1 \, $f2);
#X obj 966 387 expr max($f1 \, $f2);
#X obj 933 534 expr abs($f1);
#X obj 1014 346 t b f;
#X obj 791 314 r fromStartPctQZ1;
#X obj 1013 313 r fromEndPctQZ1;
#X obj 867 215 s toStartPctQZ1;
#X obj 730 216 s toEndPctQZ1;
#X obj 144 280 r fromLoadSFQZ1;
#X obj 339 273 r fromDSPQZ1;
#X obj 1175 218 s toSpdQZ1;
#X obj 401 637 r fromSpdQZ1;
#X obj 458 1491 s toGraphicIdxLQZ1;
#X obj 555 1445 s toGraphicIdxRQZ1;
#X obj 621 215 s toAmpQZ1;
#X obj 793 2039 r fromAmpQZ1;
#X obj 241 -27 t b b b b b b b b b b b b b b b b b b b b b;
#X obj 1064 2194 vline~;
#X msg 1008 2079 0 \$1;
#X obj 1007 2046 f;
#X obj 1239 2008 * 1;
#X obj 1219 1953 t b f;
#X obj 1228 2051 pack 1 15 1 0 15;
#X msg 1104 2158 \$1 \$2 \, \$3 \$4 \$5;
#X obj 1200 1834 r fromAmpQZ1;
#X obj 1173 1885 f;
#X obj 1172 1921 t f f;
#X obj 1349 1869 t f f;
#X obj 1033 2013 r fromRelQZ1;
#X obj 1018 1833 r fromTrigADSQZ1;
#X obj 1348 1836 r fromAtkQZ1;
#X obj 1482 1835 r fromSusQZ1;
#X obj 1618 1834 r fromDecayQZ1;
#X obj 137 219 s toAtkQZ1;
#X msg 137 185 15;
#X obj 260 215 s toSusQZ1;
#X msg 260 181 1;
#X obj 374 219 s toDecayQZ1;
#X msg 374 185 0;
#X obj 505 217 s toRelQZ1;
#X msg 505 184 100;
#X obj 1008 1984 r fromTrigRelQZ1;
#X text 389 586 Base Phasor Freq;
#X floatatom 429 896 15 0 0 0 - - -;
#X text 425 868 actual phasor freq;
#X obj 207 1030 f;
#X obj 208 1069 spigot 0;
#X obj 666 1025 r toPhasor0QZ1;
#X msg 667 1065 0;
#X obj 353 1004 r toPhasorFreqSpigotQZ1;
#X obj 52 931 r toBangPhasorFreqQZ1;
#X obj -20 203 s toPhasor0QZ1;
#X obj 1649 1588 s toTrigRelQZ1;
#X obj 1713 1750 s toPhasorFreqSpigotQZ1;
#X msg 1674 1717 0;
#X obj 1513 1751 s toPhasor0QZ1;
#X obj 971 1665 t b b b;
#X obj 1258 1750 s toPhasorFreqSpigotQZ1;
#X msg 1089 1702 1;
#X obj 1018 1751 s toBangPhasorFreqQZ1;
#X obj 1602 1558 t b b;
#X obj 1649 1622 r fromRelQZ1;
#X obj 1602 1652 delay;
#X obj 1602 1684 t b b;
#X obj 863 1752 s toTrigADSQZ1;
#X obj 1602 1524 r fromStopQZ1;
#X obj 971 1632 r fromStartQZ1;
#X obj 2503 45 samplerate~;
#X obj 2503 75 / 1000;
#X obj 2429 146 *;
#X obj 2006 719 f;
#X obj 2053 1380 bng 30 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 455 1621 s~ toThreshQZ1;
#X obj 414 489 f;
#X obj 414 439 r toTotalSampsQZ1;
#X obj 414 522 s fromTotalSampsQZ1;
#X obj 1014 460 f;
#X obj 1013 420 r toRealEndQZ1;
#X obj 1013 501 s fromRealEndQZ1;
#X obj 1795 789 r fromTotalSampsQZ1;
#X obj 1768 821 *;
#X obj 1768 756 r fromRealEndQZ1;
#X obj 1975 904 -;
#X obj 1903 674 t b b b;
#X obj 1804 721 s toTotalSampsQZ1;
#X obj 1653 720 s toRealEndQZ1;
#X obj 1251 1064 r~ toThreshQZ1;
#X obj 2139 1387 threshold~;
#X obj 2473 1608 s toStopSeqQZ1;
#X obj 1504 1494 r toStopSeqQZ1;
#N canvas 237 152 1024 621 sigasfloat 0;
#X obj 21 54 inlet~ sigin;
#X obj 138 214 snapshot~;
#X obj 161 154 metro 50;
#X obj 214 72 loadbang;
#X text 235 207 samples a signal and outputs a float each time it receives
a bang, f 34;
#X text 254 153 bangs snapshot ever 50ms;
#X text 314 73 metro needs a bang to start outputing bangs;
#X obj 90 313 outlet float out;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 1303 1209 pd sigasfloat;
#X floatatom 1303 1243 15 0 0 0 - - -;
#X obj 1780 270 f;
#X obj 2035 -53 r fromSpdQZ1;
#X obj 1780 341 route 0 1;
#X obj 2457 816 r fromTotalSampsQZ1;
#X obj 2430 852 *;
#X obj 2451 665 t b b b;
#X obj 2568 745 s toTotalSampsQZ1;
#X obj 2295 745 f;
#X obj 664 496 f;
#X obj 664 457 r toRealStartQZ1;
#X obj 664 537 s fromRealStartQZ1;
#X obj 2372 745 s toRealStartQZ1;
#X obj 2430 783 r fromRealStartQZ1;
#X obj 2328 1009 * -1;
#X obj 1435 1148 *~ 1;
#X obj 1472 1051 r fromSpdQZ1;
#X obj 1472 1085 expr if($f1<0 \, -1 \, 1);
#X obj 1780 302 expr if($f1<0 \, 0 \, 1);
#X msg 2139 1078 set \$1 100 \$1 100;
#X obj 2328 932 +;
#X obj 1672 113 r fromStartPctQZ1;
#X obj 1672 144 t b;
#X obj 1730 175 t b;
#X obj 1730 144 r fromEndPctQZ1;
#X obj 2186 -53 r fromRelQZ1;
#X floatatom 2606 253 15 0 0 0 - - -;
#X obj 2560 200 *;
#X obj 2559 136 t b f;
#X obj 2372 301 expr abs($f1);
#X text 2384 -14 Calculate release time in samples;
#X text 1572 20 Every time you change either speed start \, end or
release time \, this bangs out speed and starts the squence to calculate
a new threshold., f 37;
#X text 2202 130 Multiply release time in milliseconds by the sample
rate/1000 to get release time in samples, f 22;
#X text 2599 179 multiply the release time in samples by the speed
to get actual release time in samples at the current speed, f 36;
#X text 1631 550 If speed is positive;
#X text 2355 550 if speed is negative;
#X text 2512 291 Make sure actual release time in seconds is positive
, f 27;
#X text 1500 292 if speed is negative output '0' if positive output
'1', f 27;
#X text 1412 344 will send a bang out the appropriate outlet depending
on whether speed is negative or positive, f 36;
#X text 1806 593 Get release time in samples \, the total number of
samples \, and the end percentage for the below calculations, f 28
;
#X text 1460 804 multiply total samples in the sound file by end pct
to get actual end time in samples, f 30;
#X text 1639 904 subtract release time in samples from end time in
samples to get trigger threshold, f 33;
#X text 1121 1002 current sample index signal from phasor (after being
multiplied by total number of samples, f 32;
#X text 1469 1006 detects if speed is negative \, outputs -1 for negative
and 1 for positive, f 37;
#X text 2322 1079 set command for threshold~ (see help file);
#X text 1483 1122 When the signal to be evaluated is positive moving
in a positive direction threshold~ works as you would expect and gives
out a bang when the set threshold is reached. For some reason when
moving in a backwards direction the threshold is not detected. The
work around here is to make the signal to be evaluated a negative one
moving in a negative direction and then the threshold to be detected
a negative one and this seems to work;
#X text 2447 583 Get release time in samples \, the total number of
samples \, and the end percentage for the below calculations, f 28
;
#X text 2470 849 multiply total samples in the sound file by end pct
to get actual end time in samples, f 30;
#X text 2367 922 add release time in samples from end time in samples
to get trigger threshold, f 33;
#X text 2385 998 make actual release time in samples negative (see
note below), f 33;
#X obj 2187 1147 print;
#X obj 2186 -23 t b f;
#X obj 2035 -19 t f f;
#X floatatom 1946 -5 5 0 0 0 - - -;
#X floatatom 2276 -8 5 0 0 0 - - -;
#X floatatom 1791 176 5 0 0 0 - - -;
#X floatatom 1593 152 5 0 0 0 - - -;
#X obj 94 -83 r toInitQZ1;
#X obj 1172 86 s toCalcSampRateQZ1;
#X obj 2503 11 r toCalcSampRateQZ1;
#X obj 223 427 t f f b;
#X obj 248 482 s toInitQZ1;
#X obj 1496 188 r toCalcThreshQZ1;
#X obj -78 108 s toCalcThreshQZ1;
#X text 2105 1492 loop on;
#X obj 2070 1566 spigot 1;
#X obj 2117 1633 s toTrigRelQZ1;
#X obj 2070 1603 t b b;
#X obj 2117 1667 r fromRelQZ1;
#X obj 2070 1697 delay;
#X obj 2070 1734 s toTrigADSQZ1;
#X obj 2473 1565 spigot 0;
#X text 2472 1529 loop off;
#X obj 2395 1273 route 0 1;
#X obj 2335 1309 t b b;
#X msg 2382 1341 0;
#X msg 2335 1341 1;
#X obj 2438 1306 t b b;
#X msg 2485 1338 0;
#X msg 2438 1338 1;
#X obj 985 182 s toLoopTogQZ1;
#X obj 2395 1240 r fromLoopTogQZ1;
#X text 2323 1200 Turn Looping On/Off;
#X text 2189 1552 spigots control where the threshold bang goes, f
23;
#X text 2076 1768 For loop on:;
#X text 2076 1796 1) Trigger release;
#X text 2076 1824 2) Delay release time;
#X text 2076 1852 3) Trigger attack-decay-sustain;
#X text 1502 1456 Stop Sequence;
#X text 2471 1638 For loop off \, trigger stop sequence to the left
, f 28;
#X connect 0 0 190 0;
#X connect 1 0 17 0;
#X connect 2 0 8 0;
#X connect 3 0 27 0;
#X connect 4 0 15 0;
#X connect 4 0 18 0;
#X connect 4 0 19 0;
#X connect 4 0 111 0;
#X connect 5 0 7 0;
#X connect 6 0 56 0;
#X connect 8 0 14 1;
#X connect 11 0 53 0;
#X connect 12 0 51 0;
#X connect 12 0 52 0;
#X connect 13 0 14 0;
#X connect 13 1 4 1;
#X connect 13 2 2 0;
#X connect 14 0 22 0;
#X connect 15 0 10 0;
#X connect 17 0 0 0;
#X connect 18 0 5 0;
#X connect 19 0 20 0;
#X connect 20 0 7 1;
#X connect 21 0 14 0;
#X connect 21 1 37 0;
#X connect 22 0 82 0;
#X connect 22 0 84 0;
#X connect 23 0 55 0;
#X connect 24 0 49 0;
#X connect 25 0 41 0;
#X connect 27 0 28 0;
#X connect 27 0 30 0;
#X connect 28 0 29 0;
#X connect 30 0 31 0;
#X connect 30 0 4 0;
#X connect 30 0 12 0;
#X connect 31 0 32 0;
#X connect 33 0 45 0;
#X connect 34 0 46 0;
#X connect 35 0 25 0;
#X connect 35 1 30 1;
#X connect 35 2 25 1;
#X connect 36 0 38 0;
#X connect 36 1 37 1;
#X connect 36 2 27 1;
#X connect 37 0 22 1;
#X connect 38 0 21 0;
#X connect 39 0 35 0;
#X connect 39 0 139 1;
#X connect 40 0 25 0;
#X connect 40 0 115 1;
#X connect 41 0 26 0;
#X connect 41 0 36 0;
#X connect 42 0 40 0;
#X connect 42 0 39 0;
#X connect 42 1 40 1;
#X connect 42 1 39 1;
#X connect 43 0 39 0;
#X connect 43 0 40 0;
#X connect 44 0 42 0;
#X connect 47 0 1 0;
#X connect 48 0 9 0;
#X connect 50 0 38 0;
#X connect 54 0 6 0;
#X connect 55 4 193 0;
#X connect 55 7 11 0;
#X connect 55 10 34 0;
#X connect 55 12 33 0;
#X connect 55 13 210 0;
#X connect 55 14 24 0;
#X connect 55 15 79 0;
#X connect 55 16 77 0;
#X connect 55 17 75 0;
#X connect 55 18 73 0;
#X connect 55 19 90 0;
#X connect 55 20 188 0;
#X connect 56 0 20 1;
#X connect 56 0 5 1;
#X connect 57 0 56 0;
#X connect 58 0 57 0;
#X connect 59 0 61 2;
#X connect 60 0 59 0;
#X connect 60 1 59 1;
#X connect 61 0 62 0;
#X connect 62 0 56 0;
#X connect 63 0 64 1;
#X connect 64 0 65 0;
#X connect 65 0 61 0;
#X connect 65 1 60 0;
#X connect 66 0 61 1;
#X connect 66 1 61 4;
#X connect 67 0 58 1;
#X connect 68 0 64 0;
#X connect 69 0 66 0;
#X connect 70 0 59 0;
#X connect 71 0 61 3;
#X connect 73 0 72 0;
#X connect 75 0 74 0;
#X connect 77 0 76 0;
#X connect 79 0 78 0;
#X connect 80 0 58 0;
#X connect 84 0 85 0;
#X connect 85 0 3 0;
#X connect 86 0 87 0;
#X connect 87 0 3 0;
#X connect 88 0 85 1;
#X connect 89 0 84 0;
#X connect 93 0 92 0;
#X connect 95 0 103 0;
#X connect 95 1 98 0;
#X connect 95 2 97 0;
#X connect 97 0 96 0;
#X connect 99 0 101 0;
#X connect 99 1 91 0;
#X connect 100 0 101 1;
#X connect 101 0 102 0;
#X connect 102 0 94 0;
#X connect 102 1 93 0;
#X connect 104 0 99 0;
#X connect 105 0 95 0;
#X connect 106 0 107 0;
#X connect 107 0 108 1;
#X connect 108 0 157 0;
#X connect 109 0 121 1;
#X connect 112 0 114 0;
#X connect 113 0 112 0;
#X connect 115 0 117 0;
#X connect 116 0 115 0;
#X connect 118 0 119 1;
#X connect 119 0 121 0;
#X connect 120 0 119 0;
#X connect 121 0 149 0;
#X connect 122 0 124 0;
#X connect 122 1 123 0;
#X connect 122 2 109 0;
#X connect 125 0 145 0;
#X connect 126 0 110 0;
#X connect 126 0 195 0;
#X connect 126 0 201 0;
#X connect 128 0 99 0;
#X connect 129 0 130 0;
#X connect 131 0 148 0;
#X connect 132 0 182 0;
#X connect 132 0 183 0;
#X connect 133 0 136 0;
#X connect 133 1 122 0;
#X connect 134 0 135 1;
#X connect 135 0 150 0;
#X connect 136 0 142 0;
#X connect 136 1 137 0;
#X connect 136 2 138 0;
#X connect 138 0 150 1;
#X connect 139 0 141 0;
#X connect 140 0 139 0;
#X connect 143 0 135 0;
#X connect 144 0 149 0;
#X connect 145 0 129 0;
#X connect 145 0 126 0;
#X connect 146 0 147 0;
#X connect 147 0 145 1;
#X connect 148 0 133 0;
#X connect 149 0 126 0;
#X connect 149 0 180 0;
#X connect 150 0 144 0;
#X connect 151 0 152 0;
#X connect 151 0 186 0;
#X connect 152 0 131 0;
#X connect 153 0 131 0;
#X connect 154 0 153 0;
#X connect 154 0 185 0;
#X connect 155 0 181 0;
#X connect 155 0 184 0;
#X connect 157 0 156 0;
#X connect 157 0 159 0;
#X connect 158 0 157 0;
#X connect 158 1 157 1;
#X connect 159 0 138 1;
#X connect 159 0 109 1;
#X connect 181 0 131 0;
#X connect 181 1 108 0;
#X connect 182 0 131 0;
#X connect 182 1 158 0;
#X connect 187 0 55 0;
#X connect 189 0 106 0;
#X connect 190 0 13 0;
#X connect 190 1 112 1;
#X connect 190 2 191 0;
#X connect 192 0 131 0;
#X connect 195 0 197 0;
#X connect 197 0 199 0;
#X connect 197 1 196 0;
#X connect 198 0 199 1;
#X connect 199 0 200 0;
#X connect 201 0 127 0;
#X connect 203 0 204 0;
#X connect 203 1 207 0;
#X connect 204 0 206 0;
#X connect 204 1 205 0;
#X connect 205 0 195 1;
#X connect 206 0 201 1;
#X connect 207 0 209 0;
#X connect 207 1 208 0;
#X connect 208 0 201 1;
#X connect 209 0 195 1;
#X connect 211 0 203 0;
#X restore 11 307 pd subpatch1;
#X floatatom 480 58 5 0 0 2 Rel toRelQZ1 fromRelQZ1;
#X text 400 41 Trig Rel, f 4;
#X floatatom 207 58 5 0 100000 2 Atk toAtkQZ1 fromAtkQZ1;
#X obj 171 49 bng 25 250 50 0 fromTrigADSQZ1 toTrigADSQZ1 empty 17
7 0 10 -260097 -1 -1;
#X floatatom 268 58 5 0 100000 2 Sus toSusQZ1 fromSusQZ1;
#X floatatom 328 58 5 0 100000 2 Decay toDecayQZ1 fromDecayQZ1;
#X text 125 40 Trig ADS, f 4;
#X obj 447 50 bng 25 250 50 0 fromTrigRelQZ1 toTrigRelQZ1 empty 17
7 0 10 -159808 -1 -1;
#X obj 70 59 bng 25 250 50 0 fromStopQZ1 toStopQZ1 empty 17 7 0 10
-258113 -1 -1;
#X obj 9 59 bng 25 250 50 0 fromStartQZ1 toStartQZ1 empty 17 7 0 10
-4034 -1 -1;
#X text 67 38 Stop;
#X text 6 38 Start;
#X obj 550 56 tgl 25 0 fromLoopTogQZ1 toLoopTogQZ1 empty 17 7 0 10
-262144 -1 -1 1 1;
#X text 546 35 Loop;
